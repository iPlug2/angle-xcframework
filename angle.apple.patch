diff --git a/BUILD.gn b/BUILD.gn
index 07e1268a57..3e4c1710ba 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -707,17 +707,17 @@ angle_static_library("angle_gpu_info_util") {
 
   if (is_apple) {
     frameworks = [
+      "Foundation.framework",
       "CoreFoundation.framework",
       "CoreGraphics.framework",
     ]
     if (angle_enable_cgl) {
       frameworks += [ "OpenGL.framework" ]
     }
-    if (is_mac || angle_enable_cgl) {
+    if (is_mac || (is_ios && target_environment == "catalyst") || angle_enable_cgl) {
       frameworks += [ "IOKit.framework" ]
       sources += libangle_gpu_info_util_mac_sources
-    }
-    if (is_ios && !angle_enable_cgl) {
+    } else if (is_ios) {
       sources += libangle_gpu_info_util_ios_sources
     }
   }
diff --git a/src/common/system_utils.cpp b/src/common/system_utils.cpp
index 740384eaf0..18de3eeec2 100644
--- a/src/common/system_utils.cpp
+++ b/src/common/system_utils.cpp
@@ -226,7 +226,7 @@ void *OpenSystemLibraryAndGetError(const char *libraryName,
     {
         libraryWithExtension += dotExtension;
     }
-#if ANGLE_PLATFORM_IOS_FAMILY
+#ifdef ANGLE_PLATFORM_APPLE
     // On iOS, libraryWithExtension is a directory in which the library resides.
     // The actual library name doesn't have an extension at all.
     // E.g. "libEGL.framework/libEGL"
diff --git a/src/common/system_utils_mac.cpp b/src/common/system_utils_mac.cpp
index 2c48a7eb04..18d0b32313 100644
--- a/src/common/system_utils_mac.cpp
+++ b/src/common/system_utils_mac.cpp
@@ -23,6 +23,6 @@ namespace angle
 {
 const char *GetSharedLibraryExtension()
 {
-    return "dylib";
+    return "framework";
 }
 }  // namespace angle
diff --git a/src/common/system_utils_posix.cpp b/src/common/system_utils_posix.cpp
index 76c5c99f0f..a99eff17fb 100644
--- a/src/common/system_utils_posix.cpp
+++ b/src/common/system_utils_posix.cpp
@@ -197,7 +197,12 @@ void *OpenSystemLibraryWithExtensionAndGetError(const char *libraryName,
     std::string directory;
     if (searchType == SearchType::ModuleDir)
     {
-#if ANGLE_PLATFORM_IOS_FAMILY
+#if ANGLE_PLATFORM_MACOS || ANGLE_PLATFORM_MACCATALYST
+        // On macOS, shared libraries must be loaded from within the app bundle, in a directory
+        // next to the executable directory
+        directory = GetExecutableDirectory();
+        directory = directory.substr(0, directory.find_last_of('/')) + "/Frameworks/";
+#elif ANGLE_PLATFORM_IOS_FAMILY
         // On iOS, shared libraries must be loaded from within the app bundle.
         directory = GetExecutableDirectory() + "/Frameworks/";
 #elif ANGLE_PLATFORM_FUCHSIA
diff --git a/src/gpu_info_util/SystemInfo_internal.h b/src/gpu_info_util/SystemInfo_internal.h
index 5cef5d49ee..030d0ccad6 100644
--- a/src/gpu_info_util/SystemInfo_internal.h
+++ b/src/gpu_info_util/SystemInfo_internal.h
@@ -43,7 +43,7 @@ uint64_t GetGpuIDFromOpenGLDisplayMask(uint32_t displayMask);
 
 #endif
 
-#if defined(ANGLE_PLATFORM_MACOS) && ANGLE_ENABLE_METAL
+#if (defined(ANGLE_PLATFORM_MACOS) || defined(ANGLE_PLATFORM_MACCATALYST)) && ANGLE_ENABLE_METAL
 // Get VendorID from metal device's registry ID
 VendorID GetVendorIDFromMetalDeviceRegistryID(uint64_t registryID);
 #endif
diff --git a/src/libANGLE/renderer/metal/metal_backend.gni b/src/libANGLE/renderer/metal/metal_backend.gni
index ef8c6ad9f4..6f32c518d6 100644
--- a/src/libANGLE/renderer/metal/metal_backend.gni
+++ b/src/libANGLE/renderer/metal/metal_backend.gni
@@ -90,8 +90,7 @@ metal_backend_sources = [
 # We can build the ANGLE internal shaders at build-time if we have access to the Mac SDK in the "build" dir.
 # Building internal shaders for iOS is not supported. The Chromium Mac SDK does not have all the required files.
 # This is also an issue when cross-compiling for mac.
-metal_internal_shader_compilation_supported =
-    angle_has_build && !is_ios && target_os == host_os
+metal_internal_shader_compilation_supported = true
 
 metal_internal_shaders_header =
     "$root_gen_dir/angle/mtl_internal_shaders_metallib.h"
diff --git a/src/libGLESv2.gni b/src/libGLESv2.gni
index 16ff4f6e9d..4258a09d5d 100644
--- a/src/libGLESv2.gni
+++ b/src/libGLESv2.gni
@@ -130,7 +130,7 @@ if (is_apple) {
     "src/common/system_utils_apple.cpp",
     "src/common/system_utils_posix.cpp",
   ]
-  if (is_mac) {
+  if (is_mac || (is_ios && target_environment == "catalyst")) {
     libangle_common_sources += [
       "src/common/gl/cgl/FunctionsCGL.cpp",
       "src/common/gl/cgl/FunctionsCGL.h",
