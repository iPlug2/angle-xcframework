diff --git a/config/apple/codesign.py b/config/apple/codesign.py
index 0c9298ed6..2c74b71ce 100644
--- a/config/apple/codesign.py
+++ b/config/apple/codesign.py
@@ -102,6 +102,8 @@ class Bundle(object):
   def Kind(platform, extension):
     if platform in ('iphoneos', 'iphonesimulator'):
       return 'ios'
+    if platform == 'xros' or platform == 'xrsimulator':
+      return 'xros'
     if platform == 'macosx':
       if extension == '.framework':
         return 'mac_framework'
diff --git a/config/apple/mobile_config.gni b/config/apple/mobile_config.gni
index 48e80f216..f778ac967 100644
--- a/config/apple/mobile_config.gni
+++ b/config/apple/mobile_config.gni
@@ -8,6 +8,7 @@ declare_args() {
   # Configure the environment for which to build. Could be either "device",
   # "simulator" or "catalyst". Must be specified.
   target_environment = ""
+  target_os_variation = ""
 
   # Valid values: "iphoneos" (default), "tvos", "watchos".
   # Indicates the kind of iOS or iOS-based platform that is being targeted.
@@ -75,6 +76,7 @@ if (is_ios || is_watchos) {
     _target_platforms += [
       "iphoneos",
       "tvos",
+      "xros",
     ]
   } else if (is_watchos) {
     _target_platforms += [
diff --git a/config/apple/sdk_info.py b/config/apple/sdk_info.py
index bbadc1247..8f06db59d 100755
--- a/config/apple/sdk_info.py
+++ b/config/apple/sdk_info.py
@@ -141,6 +141,8 @@ def main():
                           'macosx',
                           'watchos',
                           'watchsimulator',
+                          'xros',
+                          'xrsimulator',
                       ])
   args = parser.parse_args()
   if args.developer_dir:
diff --git a/config/clang/BUILD.gn b/config/clang/BUILD.gn
index ec77c17dc..e6e13a88a 100644
--- a/config/clang/BUILD.gn
+++ b/config/clang/BUILD.gn
@@ -273,6 +273,14 @@ clang_lib("compiler_builtins") {
       } else {
         assert(false, "unsupported target_environment=$target_environment")
       }
+    } else if (target_platform == "xros") {
+      if (target_environment == "simulator") {
+        libname = "xrossim"
+      } else if (target_environment == "device") {
+        libname = "xros"
+      } else {
+        assert(false, "unsupported target_environment=$target_environment")
+      }
     } else {
       assert(false, "unsupported target_platform=$target_platform")
     }
diff --git a/config/compiler/BUILD.gn b/config/compiler/BUILD.gn
index 128db7840..66e6206f7 100644
--- a/config/compiler/BUILD.gn
+++ b/config/compiler/BUILD.gn
@@ -590,24 +590,6 @@ config("compiler") {
       }
     }
 
-    # TODO(crbug.com/40283598): This causes binary size growth and potentially
-    # other problems.
-    # TODO(crbug.com/40284925): This isn't supported by Cronet's mainline llvm version.
-    if (default_toolchain != "//build/toolchain/cros:target" &&
-        !llvm_android_mainline) {
-      cflags += [
-        "-mllvm",
-        "-split-threshold-for-reg-with-hint=0",
-      ]
-      if (use_thin_lto && is_a_target_toolchain) {
-        if (is_win) {
-          ldflags += [ "-mllvm:-split-threshold-for-reg-with-hint=0" ]
-        } else {
-          ldflags += [ "-Wl,-mllvm,-split-threshold-for-reg-with-hint=0" ]
-        }
-      }
-    }
-
     # TODO(crbug.com/40192287): Investigate why/if this should be needed.
     if (is_win) {
       cflags += [ "/clang:-ffp-contract=off" ]
@@ -1937,6 +1919,7 @@ config("default_warnings") {
       # Disables.
       "-Wno-missing-field-initializers",  # "struct foo f = {0};"
       "-Wno-unused-parameter",  # Unused function parameters.
+      "-Wno-deprecated-declarations",
     ]
 
     cflags_cc += [
diff --git a/config/ios/BUILD.gn b/config/ios/BUILD.gn
index 2a61db736..c39e2dadf 100644
--- a/config/ios/BUILD.gn
+++ b/config/ios/BUILD.gn
@@ -46,6 +46,8 @@ config("compiler") {
     triplet_os = "apple-ios"
   } else if (target_platform == "tvos") {
     triplet_os = "apple-tvos"
+  } else if (target_platform == "xros") {
+    triplet_os = "apple-xros"
   }
 
   # Set target.
diff --git a/config/ios/ios_sdk.gni b/config/ios/ios_sdk.gni
index ff28e7e7d..dcde22dce 100644
--- a/config/ios/ios_sdk.gni
+++ b/config/ios/ios_sdk.gni
@@ -86,6 +86,16 @@ if (ios_sdk_path == "") {
     } else {
       assert(false, "unsupported target_environment=$target_environment")
     }
+  } else if (target_platform == "xros") {
+    if (target_environment == "simulator") {
+      ios_sdk_name = "xrsimulator"
+      ios_sdk_platform = "XRSimulator"
+    } else if (target_environment == "device") {
+      ios_sdk_name = "xros"
+      ios_sdk_platform = "XROS"
+    } else {
+      assert(false, "unsupported environment: $target_environment")
+    }
   } else {
     assert(false, "unsupported target_platform=$target_platform")
   }
diff --git a/config/rust.gni b/config/rust.gni
index 74b3b9ced..28ee4ae50 100644
--- a/config/rust.gni
+++ b/config/rust.gni
@@ -289,6 +289,16 @@ if (is_linux || is_chromeos) {
       } else {
         assert(false, "unsupported target_environment=$target_environment")
       }
+    } else if (target_platform == "xros") {
+      if (target_environment == "simulator") {
+        rust_abi_target = "aarch64-apple-xros-sim"
+        cargo_target_abi = "sim"
+      } else if (target_environment == "device") {
+        rust_abi_target = "aarch64-apple-xros"
+        cargo_target_abi = "sim"
+      } else {
+        assert(false, "unsupported target_environment=$target_environment")
+      }
     } else {
       assert(false, "unsupported target_platform=$target_platform")
     }
@@ -313,6 +323,13 @@ if (is_linux || is_chromeos) {
       } else {
         assert(false, "unsupported target_environment=$target_environment")
       }
+    } else if (target_platform == "xros") {
+      if (target_environment == "simulator") {
+        rust_abi_target = "x86_64-apple-xros-sim"
+        cargo_target_abi = "sim"
+      } else {
+        assert(false, "unsupported target_environment=$target_environment")
+      }
     } else {
       assert(false, "unsupported target_platform=$target_platform")
     }
diff --git a/toolchain/apple/toolchain.gni b/toolchain/apple/toolchain.gni
index 384375fbd..486ed32cb 100644
--- a/toolchain/apple/toolchain.gni
+++ b/toolchain/apple/toolchain.gni
@@ -459,7 +459,7 @@ template("single_apple_toolchain") {
         command = "rm -f {{output}} && TOOL_VERSION=${tool_versions.filter_libtool} $python_path $script $libtool -static -D {{arflags}} -o {{output}} @$rspfile"
         description = "LIBTOOL-STATIC {{output}}"
       } else {
-        ar = "${prefix}llvm-ar"
+        ar = "../../../third_party/llvm-build/Release+Asserts/bin/llvm-ar"
         command = "\"$ar\" {{arflags}} -r -c -s -D {{output}} @$rspfile"
 
         # Remove the output file first so that ar doesn't try to modify the
