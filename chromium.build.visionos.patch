diff --git a/config/apple/sdk_info.py b/config/apple/sdk_info.py
index 81b06d438..94b260971 100755
--- a/config/apple/sdk_info.py
+++ b/config/apple/sdk_info.py
@@ -134,7 +134,7 @@ def main():
                       default='.',
                       help='Value of gn $root_build_dir')
   parser.add_argument('platform',
-                      choices=['iphoneos', 'iphonesimulator', 'macosx'])
+                      choices=['iphoneos', 'iphonesimulator', 'macosx', 'xros', 'xrsimulator'])
   args = parser.parse_args()
   if args.developer_dir:
     os.environ['DEVELOPER_DIR'] = args.developer_dir
diff --git a/config/compiler/BUILD.gn b/config/compiler/BUILD.gn
index 49180c874..e6191045f 100644
--- a/config/compiler/BUILD.gn
+++ b/config/compiler/BUILD.gn
@@ -613,24 +613,6 @@ config("compiler") {
       }
     }
 
-    # TODO(crbug.com/1488374): This causes binary size growth and potentially
-    # other problems.
-    # TODO(crbug.com/1491036): This isn't supported by Cronet's mainline llvm version.
-    if (default_toolchain != "//build/toolchain/cros:target" &&
-        !llvm_android_mainline) {
-      cflags += [
-        "-mllvm",
-        "-split-threshold-for-reg-with-hint=0",
-      ]
-      if (use_thin_lto && is_a_target_toolchain) {
-        if (is_win) {
-          ldflags += [ "-mllvm:-split-threshold-for-reg-with-hint=0" ]
-        } else {
-          ldflags += [ "-Wl,-mllvm,-split-threshold-for-reg-with-hint=0" ]
-        }
-      }
-    }
-
     # TODO(crbug.com/1235145): Investigate why/if this should be needed.
     if (is_win) {
       cflags += [ "/clang:-ffp-contract=off" ]
@@ -1832,6 +1814,7 @@ config("default_warnings") {
       # Disables.
       "-Wno-missing-field-initializers",  # "struct foo f = {0};"
       "-Wno-unused-parameter",  # Unused function parameters.
+      "-Wno-deprecated-declarations",
     ]
 
     if (!is_nacl || is_nacl_saigo) {
diff --git a/config/ios/BUILD.gn b/config/ios/BUILD.gn
index cbc212683..38d2bbd40 100644
--- a/config/ios/BUILD.gn
+++ b/config/ios/BUILD.gn
@@ -41,7 +41,11 @@ config("compiler") {
   }
 
   # OS.
-  triplet_os = "apple-ios"
+  if (target_os_variation == "visionos") {
+    triplet_os = "apple-xros"
+  } else {
+    triplet_os = "apple-ios"
+  }
 
   # Set target.
   common_flags = [
diff --git a/config/ios/codesign.py b/config/ios/codesign.py
index fd96f312d..b2f43cb9b 100644
--- a/config/ios/codesign.py
+++ b/config/ios/codesign.py
@@ -91,6 +91,8 @@ class Bundle(object):
   def Kind(platform, extension):
     if platform == 'iphonesimulator' or platform == 'iphoneos':
       return 'ios'
+    if platform == 'xros' or platform == 'xrsimulator':
+      return 'xros'
     if platform == 'macosx':
       if extension == '.framework':
         return 'mac_framework'
diff --git a/config/ios/config.gni b/config/ios/config.gni
index f1c62fae3..f451ace4d 100644
--- a/config/ios/config.gni
+++ b/config/ios/config.gni
@@ -15,6 +15,7 @@ declare_args() {
   # then writes out an orderfile to the documents directory. It should generally
   # NOT be enabled.
   ios_chrome_generate_order_file = false
+  target_os_variation = ""
 }
 
 if (target_environment == "") {
diff --git a/config/ios/ios_sdk.gni b/config/ios/ios_sdk.gni
index f8bc90370..6f3a18959 100644
--- a/config/ios/ios_sdk.gni
+++ b/config/ios/ios_sdk.gni
@@ -71,7 +71,17 @@ if (target_environment == "device" && ios_enable_code_signing) {
 
 if (ios_sdk_path == "") {
   # Compute default target.
-  if (target_environment == "simulator") {
+  if (target_os_variation == "visionos") {
+    if (target_environment == "simulator") {
+      ios_sdk_name = "xrsimulator"
+      ios_sdk_platform = "XRSimulator"
+    } else if (target_environment == "device") {
+      ios_sdk_name = "xros"
+      ios_sdk_platform = "XROS"
+    } else {
+      assert(false, "unsupported environment: $target_environment")
+    }
+  } else if (target_environment == "simulator") {
     ios_sdk_name = "iphonesimulator"
     ios_sdk_platform = "iPhoneSimulator"
   } else if (target_environment == "device") {
diff --git a/toolchain/apple/toolchain.gni b/toolchain/apple/toolchain.gni
index c22bc67af..903654714 100644
--- a/toolchain/apple/toolchain.gni
+++ b/toolchain/apple/toolchain.gni
@@ -466,7 +466,7 @@ template("single_apple_toolchain") {
         command = "rm -f {{output}} && TOOL_VERSION=${tool_versions.filter_libtool} $python_path $script $libtool -static -D {{arflags}} -o {{output}} @$rspfile"
         description = "LIBTOOL-STATIC {{output}}"
       } else {
-        ar = "${prefix}llvm-ar"
+        ar = "../../../third_party/llvm-build/Release+Asserts/bin/llvm-ar"
         command = "\"$ar\" {{arflags}} -r -c -s -D {{output}} @$rspfile"
 
         # Remove the output file first so that ar doesn't try to modify the
