diff --git a/BUILD.gn b/BUILD.gn
index 4cd1b6928..8c57319ff 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -694,6 +694,7 @@ angle_static_library("angle_gpu_info_util") {
 
   if (is_apple) {
     frameworks = [
+      "Foundation.framework",
       "IOKit.framework",
       "CoreFoundation.framework",
       "CoreGraphics.framework",
@@ -703,12 +704,12 @@ angle_static_library("angle_gpu_info_util") {
     } else if (angle_enable_cgl) {
       frameworks += [ "OpenGL.framework" ]
     }
-    if (is_mac || angle_enable_cgl) {
+    if (is_mac || angle_enable_cgl || (is_ios && target_environment == "catalyst")) {
       sources += libangle_gpu_info_util_mac_sources
-    }
-    if (is_ios && !angle_enable_cgl) {
+    } else if (is_ios) {
       sources += libangle_gpu_info_util_ios_sources
     }
+    defines += [ "GL_SILENCE_DEPRECATION" ]
   }
 }
 
diff --git a/src/common/system_utils.cpp b/src/common/system_utils.cpp
index 740384eaf..18de3eeec 100644
--- a/src/common/system_utils.cpp
+++ b/src/common/system_utils.cpp
@@ -226,7 +226,7 @@ void *OpenSystemLibraryAndGetError(const char *libraryName,
     {
         libraryWithExtension += dotExtension;
     }
-#if ANGLE_PLATFORM_IOS_FAMILY
+#ifdef ANGLE_PLATFORM_APPLE
     // On iOS, libraryWithExtension is a directory in which the library resides.
     // The actual library name doesn't have an extension at all.
     // E.g. "libEGL.framework/libEGL"
diff --git a/src/common/system_utils_mac.cpp b/src/common/system_utils_mac.cpp
index 2c48a7eb0..18d0b3231 100644
--- a/src/common/system_utils_mac.cpp
+++ b/src/common/system_utils_mac.cpp
@@ -23,6 +23,6 @@ namespace angle
 {
 const char *GetSharedLibraryExtension()
 {
-    return "dylib";
+    return "framework";
 }
 }  // namespace angle
diff --git a/src/common/system_utils_posix.cpp b/src/common/system_utils_posix.cpp
index 76c5c99f0..a99eff17f 100644
--- a/src/common/system_utils_posix.cpp
+++ b/src/common/system_utils_posix.cpp
@@ -197,7 +197,12 @@ void *OpenSystemLibraryWithExtensionAndGetError(const char *libraryName,
     std::string directory;
     if (searchType == SearchType::ModuleDir)
     {
-#if ANGLE_PLATFORM_IOS_FAMILY
+#if ANGLE_PLATFORM_MACOS || ANGLE_PLATFORM_MACCATALYST
+        // On macOS, shared libraries must be loaded from within the app bundle, in a directory
+        // next to the executable directory
+        directory = GetExecutableDirectory();
+        directory = directory.substr(0, directory.find_last_of('/')) + "/Frameworks/";
+#elif ANGLE_PLATFORM_IOS_FAMILY
         // On iOS, shared libraries must be loaded from within the app bundle.
         directory = GetExecutableDirectory() + "/Frameworks/";
 #elif ANGLE_PLATFORM_FUCHSIA
diff --git a/src/gpu_info_util/SystemInfo_macos.mm b/src/gpu_info_util/SystemInfo_macos.mm
index 553c67568..dea55d289 100644
--- a/src/gpu_info_util/SystemInfo_macos.mm
+++ b/src/gpu_info_util/SystemInfo_macos.mm
@@ -15,10 +15,22 @@
 #include "common/apple_platform_utils.h"
 #include "common/gl/cgl/FunctionsCGL.h"
 
-#if !defined(__MAC_OS_X_VERSION_MIN_REQUIRED) || __MAC_OS_X_VERSION_MIN_REQUIRED >= 120000
-#    define HAVE_MAIN_PORT_DEFAULT 1
+#if defined(ANGLE_PLATFORM_MACOS)
+
+#    if !defined(__MAC_OS_X_VERSION_MIN_REQUIRED) || __MAC_OS_X_VERSION_MIN_REQUIRED >= 120000
+#        define HAVE_MAIN_PORT_DEFAULT 1
+#    else
+#        define HAVE_MAIN_PORT_DEFAULT 0
+#    endif
+
 #else
-#    define HAVE_MAIN_PORT_DEFAULT 0
+
+#    if !defined(__IPHONE_OS_VERSION_MIN_REQUIRED) || __IPHONE_OS_VERSION_MIN_REQUIRED >= 150000
+#        define HAVE_MAIN_PORT_DEFAULT 1
+#    else
+#        define HAVE_MAIN_PORT_DEFAULT 0
+#    endif
+
 #endif
 
 namespace angle
@@ -216,7 +228,7 @@ uint64_t GetGpuIDFromDisplayID(uint32_t displayID)
 {
     // First attempt to use query the registryID from a Metal device before falling back to CGL.
     // This avoids loading the OpenGL framework when possible.
-    if (@available(macOS 10.13, *))
+    if (@available(macOS 10.13, macCatalyst 13.0, *))
     {
         id<MTLDevice> device = CGDirectDisplayCopyCurrentMetalDevice(displayID);
         if (device)
@@ -235,7 +247,7 @@ uint64_t GetGpuIDFromDisplayID(uint32_t displayID)
 // Used with permission.
 uint64_t GetGpuIDFromOpenGLDisplayMask(uint32_t displayMask)
 {
-    if (@available(macOS 10.13, *))
+    if (@available(macOS 10.13, macCatalyst 13.0, *))
     {
         GLint numRenderers              = 0;
         CGLRendererInfoObj rendererInfo = nullptr;
@@ -282,7 +294,7 @@ VendorID GetVendorIDFromMetalDeviceRegistryID(uint64_t registryID)
 {
 #if defined(ANGLE_PLATFORM_MACOS)
     // On macOS, the following code is only supported since 10.13.
-    if (@available(macOS 10.13, *))
+    if (@available(macOS 10.13, macCatalyst 13.0, *))
 #endif
     {
         // Get a matching dictionary for the IOGraphicsAccelerator2
@@ -330,7 +342,9 @@ VendorID GetVendorIDFromMetalDeviceRegistryID(uint64_t registryID)
 
         return vendorId;
     }
+#if defined(ANGLE_PLATFORM_MACOS)
     return 0;
+#endif
 }
 
 bool GetSystemInfo_mac(SystemInfo *info)
@@ -358,7 +372,7 @@ bool GetSystemInfo_mac(SystemInfo *info)
 
     // Then override the activeGPUIndex field of info to reflect the current
     // GPU instead of the non-intel GPU
-    if (@available(macOS 10.13, *))
+    if (@available(macOS 10.13, macCatalyst 13.0, *))
     {
         ForceGPUSwitchIndex(info);
     }
diff --git a/src/libGLESv2.gni b/src/libGLESv2.gni
index 41bd81aa1..b6b36ccb4 100644
--- a/src/libGLESv2.gni
+++ b/src/libGLESv2.gni
@@ -127,7 +127,7 @@ if (is_apple) {
     "src/common/system_utils_apple.cpp",
     "src/common/system_utils_posix.cpp",
   ]
-  if (is_mac) {
+  if (is_mac || (is_ios && target_environment == "catalyst")) {
     libangle_common_sources += [
       "src/common/gl/cgl/FunctionsCGL.cpp",
       "src/common/gl/cgl/FunctionsCGL.h",
